version: 2.1

orbs:
  node: circleci/node@3.0.1
  browser-tools: circleci/browser-tools@1.0.1
  # firebase-deploy: azdevs/firebase-deploy@1.0.0

jobs:
  checkout-project:
    working_directory: ~/asl-dictionary
    steps:
      - checkout
      - persist_to_workspace:
          root: .
          paths:
            - ./*
  build:
    docker:
      - image: "circleci/node:latest"
    working_directory: ~/asl-dictionary/frontend
    steps:
      - attach_workspace:
          at: ~/asl-dictionary
      - node/install:
          install-yarn: true
          node-version: latest
      # Download and cache dependencies
      - restore_cache:
          key: 'v1-yarn-{{ checksum "yarn.lock" }}'
      - run: yarn --frozen-lockfile
      - save_cache:
          key: 'v1-yarn-{{ checksum "yarn.lock" }}'
          paths:
            - .node_modules
      - run: yarn generate
      - persist_to_workspace:
          root: .
          paths:
            - dist
            - firebase.json
            - .firebaserc
            - firestore.rules
            - firestore.indexes.json

  deploy:
    docker:
      - image: "circleci/node:latest"
    working_directory: ~/asl-dictionary
    steps:
      - when:
          condition:
            equal: [master, << pipeline.git.branch >>]
          steps:
            - attach_workspace:
                at: ~/asl-dictionary
            - run: sudo npm install -g firebase-tools
            - run:
                name: Firebase Deploy
                command: firebase deploy --token "$FIREBASE_TOKEN"
      - unless:
          condition:
            equal: [master, << pipeline.git.branch >>]
          steps:
            - run: echo "Skipping deploy."
  lighthouse:
    docker:
      - image: "circleci/node:latest"
    working_directory: ~/asl-dictionary
    steps:
      - attach_workspace:
          at: ~/asl-dictionary
      - run: sudo npm install -g @lhci/cli@0.4.x
      - browser-tools/install-chrome
      - browser-tools/install-chromedriver
      - run: lhci autorun

workflows:
  build-and-deploy:
    jobs:
      - checkout-project
      - build:
          requires:
            - checkout-project
      - deploy:
          requires:
            - build
      - lighthouse:
          requires:
            - build
