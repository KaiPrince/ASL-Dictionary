version: 2.1

orbs:
  node: circleci/node@3.0.1
  browser-tools: circleci/browser-tools@1.0.1

commands:
  restore_cache_cmd:
    steps:
      - restore_cache:
          keys:
            # when lock file changes, use increasingly general patterns to restore cache
            - yarn-packages-v1-{{ .Branch }}-{{ checksum "yarn.lock" }}
            - yarn-packages-v1-{{ .Branch }}-
            - yarn-packages-v1-
  save_cache_cmd:
    steps:
      - save_cache:
          paths:
            - ~/.cache/yarn
            - .node_modules
          key: yarn-packages-v1-{{ .Branch }}-{{ checksum "yarn.lock" }}

executors:
  docker-executor:
    docker:
      - image: "circleci/node:latest"

jobs:
  checkout-project:
    executor: docker-executor
    working_directory: ~/asl-dictionary
    steps:
      - checkout
      - persist_to_workspace:
          root: .
          paths:
            - ./*
  build:
    executor: docker-executor
    working_directory: ~/asl-dictionary/frontend
    steps:
      - attach_workspace:
          at: ~/asl-dictionary
      - node/install:
          install-yarn: true
          node-version: latest
      # Download and cache dependencies
      - restore_cache_cmd
      - run: yarn --frozen-lockfile --cache-folder ~/.cache/yarn
      - save_cache_cmd
      - run: yarn generate
      - persist_to_workspace:
          root: .
          paths:
            - dist
            - firebase.json
            - .firebaserc
            - firestore.rules
            - firestore.indexes.json
            - lighthouserc.js

  deploy:
    executor: docker-executor
    working_directory: ~/asl-dictionary/frontend
    steps:
      - attach_workspace:
          at: ~/asl-dictionary/frontend
      - run: sudo npm install -g firebase-tools
      - run:
          name: Firebase Deploy
          command: firebase deploy --token "$FIREBASE_TOKEN"
  lighthouse:
    executor: docker-executor
    working_directory: ~/asl-dictionary/frontend
    steps:
      - attach_workspace:
          at: ~/asl-dictionary/frontend
      - run: sudo npm install -g @lhci/cli@0.4.x
      - browser-tools/install-chrome
      - browser-tools/install-chromedriver
      - run: lhci autorun
workflows:
  build-and-deploy:
    jobs:
      - checkout-project
      - build:
          requires:
            - checkout-project
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master
      - lighthouse:
          requires:
            - build
